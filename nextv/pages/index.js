import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import fire from "../config/fire-config"
import { useEffect, useState } from 'react';

export default function Home() {
  
  

  const getBase64FromUrl = async (url) => {
    console.log(url)

    const data = await fetch(url,{method:"get", "access-control-allow-origin" : "*",});
    const blob = await data.blob();
    console.log(blob)
    return new Promise((resolve) => {
      const reader = new FileReader();
      reader.readAsDataURL(blob); 
      reader.onloadend = () => {
        const base64data = reader.result;   
      // setImgSel(prev=>[...prev,base64data])
          setUrl(prev=>[...prev,base64data])
           resolve(base64data);

          //Abrindo a transação com a object store "contato"
            var transaction = db.transaction('name', "readwrite");

            // Quando a transação é executada com sucesso
            transaction.oncomplete = function(event) {
                console.log('Transação finalizada com sucesso.');
            };

            // Quando ocorre algum erro na transação
            transaction.onerror = function(event) {
                console.log('Transação finalizada com erro. Erro: ' + event.target.error);
            };

            //Recuperando a object store para incluir os registros
            var store = transaction.objectStore('name');

                var request = store.add(base64data,url);

                //quando ocorrer um erro ao adicionar o registro
                request.onerror = function (event) {
                    console.log('Ocorreu um erro ao salvar o contato.');
                }

                //quando o registro for incluido com sucesso
                request.onsuccess = function (event) {
                    console.log('Contato salvo com sucesso.');
                }
            



           
      }
    });
  }

const [url,setUrl] = useState([]);
var db;
useEffect(()=>{
    if(typeof window !== undefined){
      console.log("entrou aqui")
      console.log("indexou")
      var request = window.indexedDB.open("DBteste",2);
      request.onsuccess = function (event) { 
            db = event.target.result;

       }
    
    request.onerror = function (event) { 
        //erro ao criar/abrir o banco de dados
    }
    
    request.onupgradeneeded = function(event) {
           console.log("here")
            var  db = event.target.result;
        
            var store3 = db.createObjectStore("name", { autoIncrement: true });

        }
    }
},[])

useEffect(()=>{
  const doc = fire.firestore().collection('listvideos');


 doc.onSnapshot(
   
  (docSnapshot) => {

    console.log("snapshot")
  
    setUrl([]);
    docSnapshot.forEach((async x=>{
        console.log(x.id)
        const url = "http://btgnews.com.br/videos/"+x.id+"?to=crop&r=256";
        const src = await getBase64FromUrl(url);
       // console.log(url)
      //  console.log(src)
//setUrl(src);
    }))



  }, err => {
    console.log(`Encountered error: ${err}`);
  },
querySnapshot => {

     // console.log("snapshot")
    // console.log(querySnapshot)
    //  console.log(querySnapshot.docChanges())
      //console.log(querySnapshot.docChanges())
      querySnapshot.docChanges().forEach(async(change) => {
      //  console.log(change)
        if (change.type === "added") {
           // console.log("New city: ", change.doc);
          // console.log(x.id)
          //  const url = "http://btgnews.com.br/videos/"+change.doc.id+"?to=crop&r=256";
           // const src = await getBase64FromUrl(url);
        }
        if (change.type === "modified") {
        //    console.log("Modified city: ", change.doc.data());
        }
        if (change.type === "removed") {
         //   console.log("Removed city: ", change.doc.data());
        }
    });

}
  
  
  );


},[])

function Imagens(){
  return( url.map(u => {
        if(u[5] == "v"){
          return(
                <video loop="true" autoplay="autoplay" controls muted>
                  <source src={u} type="video/mp4"/>
                </video>
            )
          }else{

            return(<img src={u}/>)
          }
      })
  )
}

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Imagens/>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>
     
        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.js</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/master/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
